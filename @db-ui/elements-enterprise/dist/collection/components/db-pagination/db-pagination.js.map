{"version":3,"file":"db-pagination.js","sourceRoot":"","sources":["../../../src/components/db-pagination/db-pagination.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  Fragment,\n  h,\n  Prop,\n  Watch\n} from '@stencil/core';\nimport { uuid } from '../../utils/utils';\n\n@Component({\n  tag: 'db-pagination',\n  styleUrl: 'db-pagination.scss'\n})\nexport class DbPagination {\n  private pagesFull: number[];\n\n  /**\n   * The ellipsisstart attribute only needs to be passed when working with slots.\n   * Should to be set to true if an ellipsis needs to be shown at the start of\n   * the pagination.\n   */\n  @Prop({ reflect: true }) ellipsisstart: boolean;\n\n  /**\n   * The ellipsisend attribute only needs to be passed when working with slots.\n   * Should to be set to true if an ellipsis needs to be shown at the end of\n   * the pagination.\n   */\n  @Prop({ reflect: true }) ellipsisend: boolean;\n\n  /**\n   * The currentpage attribute is a obligatory number attribute and indicates which\n   * page number is highlighted in the pagination.\n   */\n  @Prop({ reflect: true }) currentpage = 1;\n\n  /**\n   * The pages attribute is a obligatory number attribute and indicates how many\n   * pages the pagination knows about.\n   */\n  @Prop({ reflect: true }) pages = 2;\n\n  /**\n   * The count attribute is a number attribute and defines the number of pages\n   * displayed apart from the first and last page (except if currentpage is the\n   * first or last page, then these pages are included in the count).\n   */\n  @Prop({ reflect: true }) count = 2;\n\n  /**\n   * The titleprevious attribute is a string attribute and defines the title of\n   * the left arrow in the pagination.\n   */\n  @Prop({ reflect: true }) titleprevious = 'Goto previous page';\n\n  /**\n   * The titlenext attribute is a string attribute and defines the title of\n   * the right arrow in the pagination.\n   */\n  @Prop({ reflect: true }) titlenext = 'Goto next page';\n\n  /**\n   * The titlepagination attribute is a string attribute and defines the title of\n   * each page number (except first and last) displayed in the pagination.\n   */\n  @Prop({ reflect: true }) titlepagination = 'Page Number';\n\n  /**\n   * The textprevious attribute is a string attribute and defines the text\n   * content of the left arrow in the pagination.\n   */\n  @Prop({ reflect: true }) textprevious = 'Previous';\n\n  /**\n   * The textnext attribute is a string attribute and defines the text\n   * content of the right arrow in the pagination.\n   */\n  @Prop({ reflect: true }) textnext = 'Next';\n\n  /**\n   * The arialabel attribute is a string attribute and defines the text\n   * content of the aria-label in the pagination.\n   */\n  @Prop({ reflect: true }) arialabel = 'Pagination';\n\n  /**\n   * Optional id for the caption aria label - otherwise random id will be set\n   */\n  @Prop({ reflect: false }) ariaid: string = 'pagination-' + uuid();\n\n  /**\n   * Mapping for default change Event\n   */\n  @Event() dbChange;\n\n  private handleChange(event) {\n    this.dbChange.emit(event);\n  }\n\n  /*\n   * Watch for outside changes on relevant attributes\n   */\n  @Watch('pages')\n  @Watch('currentpage')\n  @Watch('count')\n  watchHandler() {\n    this.sliceAndSetDefaults();\n  }\n\n  @Element() hostElement: HTMLDbPaginationElement;\n  /*\n   * Sets the initial values on components first load\n   */\n  componentWillLoad() {\n    this.sliceAndSetDefaults();\n  }\n\n  private sliceAndSetDefaults() {\n    const pagesFullOverload = Array.from(Array(this.pages + 1).keys());\n    const [, ...pagesFull] = pagesFullOverload;\n    this.pagesFull = pagesFull;\n  }\n\n  private decorateChild(child) {\n    child.setAttribute('class', 'elm-link');\n    if (child.getAttribute('data-currentpage')) {\n      child.setAttribute('aria-current', 'page');\n      child.setAttribute('aria-disabled', 'true');\n    }\n    return <li innerHTML={child.outerHTML} />;\n  }\n\n  private paginationButtonFragment({\n    page,\n    curr,\n    ariaCurrent,\n    ariaDisabled,\n    title,\n    rel,\n    tabindex,\n    disabled,\n    index\n  }) {\n    return (\n      <li key={index}>\n        <button\n          class=\"elm-link\"\n          data-rel={rel === 'none' ? false : `${rel}`}\n          tabindex={tabindex ? '-1' : false}\n          title={title + ` ${page ? page : ''}`}\n          type=\"button\"\n          {...((page === curr || disabled) && ariaCurrent)}\n          {...((page === curr || disabled) && ariaDisabled)}\n          onClick={(event) => this.handleChange(event)}\n        >\n          {page}\n        </button>\n      </li>\n    );\n  }\n\n  private navElement(children) {\n    return (\n      <nav\n        class=\"cmp-pagination\"\n        role=\"navigation\"\n        aria-labelledby={this.ariaid}\n      >\n        <h2 class=\"elm-headline \" id={this.ariaid}>\n          {this.arialabel.charAt(0).toUpperCase() + this.arialabel.slice(1)}\n        </h2>\n        <ol>{children}</ol>\n      </nav>\n    );\n  }\n\n  private slotChildren() {\n    const _children = Array.from(this.hostElement.children);\n\n    // Don't render the children provided via slot\n    this.hostElement.innerHTML = '';\n\n    const [firstChild, ...withoutFirst] = _children;\n    const [lastChild, ...withoutTips] = [...withoutFirst].reverse();\n    const tiplessChildren = withoutTips.reverse();\n\n    const currentPage = tiplessChildren.findIndex((child) =>\n      child.getAttribute('data-currentpage')\n    );\n\n    const prevPage = (\n      currentPage >= 0\n        ? tiplessChildren[currentPage - 1].cloneNode(true)\n        : firstChild.cloneNode(true)\n    ) as HTMLAnchorElement;\n\n    prevPage.setAttribute('rel', 'prev');\n    prevPage.setAttribute('tabindex', '-1');\n\n    const nextPage = (\n      currentPage >= 0 && tiplessChildren.length <= currentPage\n        ? tiplessChildren[currentPage + 1].cloneNode(true)\n        : lastChild.cloneNode(true)\n    ) as HTMLAnchorElement;\n    nextPage.setAttribute('rel', 'next');\n\n    return this.navElement(\n      <Fragment>\n        {this.decorateChild(prevPage)}\n        {this.decorateChild(firstChild)}\n        {this.ellipsisstart && <li>&hellip;</li>}\n        {tiplessChildren.map(this.decorateChild)}\n        {this.ellipsisend && <li>&hellip;</li>}\n        {this.decorateChild(lastChild)}\n        {this.decorateChild(nextPage)}\n      </Fragment>\n    );\n  }\n\n  private goToPreviousPage() {\n    return this.paginationButtonFragment({\n      page: this.currentpage === 1 ? this.currentpage : this.currentpage - 1,\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlepagination,\n      rel: 'prev',\n      tabindex: true,\n      disabled: this.currentpage === 1,\n      index: 'A'\n    });\n  }\n\n  private goToNextPage() {\n    return this.paginationButtonFragment({\n      page:\n        this.currentpage === this.pages + 1\n          ? this.currentpage\n          : this.currentpage + 1,\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlenext,\n      rel: 'next',\n      tabindex: true,\n      disabled: this.currentpage === this.pages ? true : false,\n      index: 'E'\n    });\n  }\n\n  private goToFirstPage() {\n    return this.paginationButtonFragment({\n      page: this.pagesFull[0],\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlepagination,\n      rel: 'none',\n      tabindex: false,\n      disabled: false,\n      index: 'B'\n    });\n  }\n\n  private goToLastPage() {\n    return this.paginationButtonFragment({\n      page: this.pagesFull.slice(-1),\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlepagination,\n      rel: 'none',\n      tabindex: false,\n      disabled: this.currentpage === this.pages,\n      index: 'C'\n    });\n  }\n\n  private showMiddlePage(num: number) {\n    return this.paginationButtonFragment({\n      page: num,\n      curr: this.currentpage,\n      ariaCurrent: { 'aria-current': 'page' },\n      ariaDisabled: { 'aria-disabled': 'true' },\n      title: this.titlepagination,\n      rel: 'none',\n      tabindex: false,\n      disabled: false,\n      index: num\n    });\n  }\n\n  private showEllipsis(place: string) {\n    if (this.pagesFull.length < 8) {\n      return null;\n    }\n    if (this.currentpage < 4 && place === 'front') {\n      return null;\n    }\n    if (this.currentpage > this.pagesFull.length - 5 && place === 'back') {\n      return null;\n    }\n    return <li key={place}>&hellip;</li>;\n  }\n\n  private sliceCenterPages() {\n    // Decide how to cut the pages for the middle of the pagination\n    if (this.pagesFull.length < 8) {\n      return this.pagesFull.slice(1, -1);\n    }\n\n    const localCount =\n      this.currentpage <= 3 || this.currentpage >= this.pagesFull.length - 3\n        ? this.count + 1\n        : this.count;\n\n    if (this.currentpage + this.count >= this.pagesFull.length) {\n      return this.pagesFull.slice(-localCount - 1, -1);\n    }\n    if (this.pagesFull.length - 2 <= localCount) {\n      return this.pagesFull.slice(1, 1 + this.pagesFull.length - 2);\n    }\n    if (this.pagesFull.length - 2 > localCount && this.currentpage <= 3) {\n      return this.pagesFull.slice(1, 1 + localCount);\n    }\n    if (\n      this.pagesFull.length - 2 > this.count &&\n      this.currentpage > 3 &&\n      this.currentpage + this.count < this.pagesFull.length\n    ) {\n      const finalSlice = this.pagesFull.slice(\n        this.currentpage - 1,\n        this.currentpage + localCount\n      );\n\n      const isAtTheEnd = finalSlice.includes(this.pagesFull.length - 1);\n      return isAtTheEnd ? finalSlice : finalSlice.slice(0, -1);\n    }\n    return [];\n  }\n\n  private centerPages() {\n    return this.sliceCenterPages().map((num) => this.showMiddlePage(num));\n  }\n\n  render() {\n    const _children = Array.from(this.hostElement.children);\n    const hasChildren = _children.find(\n      (child) => child.tagName.toLowerCase() === 'a'\n    );\n\n    if (hasChildren) {\n      return this.slotChildren();\n    }\n\n    return this.navElement(\n      <Fragment>\n        {this.goToPreviousPage()}\n        {this.goToFirstPage()}\n        {this.showEllipsis('front')}\n        {this.pagesFull.length >= 3 ? this.centerPages() : null}\n        {this.showEllipsis('back')}\n        {this.goToLastPage()}\n        {this.goToNextPage()}\n      </Fragment>\n    );\n  }\n}\n"]}