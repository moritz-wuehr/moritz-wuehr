{"version":3,"file":"usecases.stories.js","sourceRoot":"","sources":["../../../src/stories/development/usecases.stories.ts"],"names":[],"mappings":"AAAA,eAAe;EACb,KAAK,EAAE,iCAAiC;CACzC,CAAC;AACF,MAAM,OAAO,GAAG,QAAQ,CAAC;AAEzB,MAAM,CAAC,MAAM,QAAQ,GAAG,GAAG,EAAE;EAC3B,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAiCc,OAAO;;;2BAGH,OAAO;;;;;;;;;;;;;;;;;;;;;;KAsB7B,CAAC;AACN,CAAC,CAAC;AAEF,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE;EACtC,cAAc,CAAC,MAAM,CACnB,aAAa,EACb,KAAM,SAAQ,WAAW;IACvB;MACE,KAAK,EAAE,CAAC;MAER,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;MAEpD,QAAQ,CAAC,SAAS,GAAG;;;;;;;;;;;;;;;;;;;;;;;;uBAwBN,OAAO;;;2BAGH,OAAO;;;OAG3B,CAAC;MAEA,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,WAAW,CAC7C,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CACjC,CAAC;IACJ,CAAC;GACF,CACF,CAAC;CACH;AACD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;EACvC,cAAc,CAAC,MAAM,CACnB,cAAc,EACd,KAAM,SAAQ,WAAW;IACvB;MACE,KAAK,EAAE,CAAC;MAER,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;MACpD,QAAQ,CAAC,SAAS,GAAG;;;;;;;;;;;;;;OActB,CAAC;MAEA,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,WAAW,CAC7C,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CACjC,CAAC;IACJ,CAAC;GACF,CACF,CAAC;CACH","sourcesContent":["export default {\n  title: '99-Development/Shadow DOM tests'\n};\nconst content = 'Button';\n\nexport const UseCases = () => {\n  return `\n    <style>\n        body {\n            display: block;\n            padding:10px;\n            background-color: var(--db-03-01);\n        }\n\n        button, db-button {\n            margin-left: 10px;\n        }\n\n        section {\n          margin-top: 30px;\n        }\n    </style>\n\n    <h1 class=\"elm-headline\">Technische Use Cases</h1>\n\n    <form action=\"#\" target=\"_blank\">\n      <section>\n        <b>Testformular</b>\n\n        <p>\n          <input type='text' name='input_name'/>\n        </p>\n      </section>\n\n      <section>\n        <b>Element in der Seite direkt</b>\n\n        <p>\n          <db-button icon='alarm'>\n              custom ${content}\n          </db-button>\n\n          <button>native ${content}\n          </button>\n        </p>\n      </section>\n\n      <section>\n        <b>Element in einem Shadow DOM</b>\n\n        <p>\n          <a-component></a-component>\n        <p>\n      </section>\n\n      <section>\n          <b>Element in einem verschachtelten Shadow DOM</b>\n\n          <p>\n            <aa-component></aa-component>\n          </p>\n        <p>\n      </section>\n    </form>\n    `;\n};\n\nif (!customElements.get('a-component')) {\n  customElements.define(\n    'a-component',\n    class extends HTMLElement {\n      constructor() {\n        super();\n\n        const template = document.createElement('template');\n\n        template.innerHTML = `\n        <style>\n          :host {\n            display: block;\n            padding:10px;\n            background-color: var(--db-03-04);\n        }\n        button,db-button {\n            margin:10px;\n        }\n        span{\n            font-style:italic;\n            font-weight:bold;\n        }\n\n        .subbox {\n          margin-top: 10px;\n        }\n        </style>\n\n        <div>a-component</div>\n\n        <div class=\"subbox\">\n          <db-button icon='alarm'>\n              custom ${content}\n          </db-button>\n\n          <button>native ${content}\n          </button>\n        </div>\n      `;\n\n        this.attachShadow({ mode: 'open' }).appendChild(\n          template.content.cloneNode(true)\n        );\n      }\n    }\n  );\n}\nif (!customElements.get('aa-component')) {\n  customElements.define(\n    'aa-component',\n    class extends HTMLElement {\n      constructor() {\n        super();\n\n        const template = document.createElement('template');\n        template.innerHTML = `\n          <style>\n            :host {\n              display: block;\n              padding: 10px;\n              background-color: var(--db-03-07);\n            }\n        </style>\n\n        <div class=\"box\">aa-component</div>\n\n        <div class=\"subbox\">\n          <a-component></a-component>\n        </div>\n      `;\n\n        this.attachShadow({ mode: 'open' }).appendChild(\n          template.content.cloneNode(true)\n        );\n      }\n    }\n  );\n}\n"]}