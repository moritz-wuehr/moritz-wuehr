{"file":"db-dropdown.entry.cjs.js","mappings":";;;;;;;AAAA,MAAM,aAAa,GAAG,6jSAA6jS;;MCQtkS,UAAU;;;;;mBAcc,EAAE;;EAMrC,IAAI,QAAQ;IACV,OAAO,IAAI,CAAC,SAAS,CAAC;GACvB;EAED,IAAI,QAAQ,CAAC,KAAgB;IAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;GACxB;EAKD,iBAAiB;IACf,IAAI,IAAI,CAAC,IAAI,EAAE;MACb,IAAI,CAAC,QAAQ,GAAGA,eAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACtC;SAAM;MACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;MAChD,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,EAAE;QACvE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;OAC7B;WAAM;QACL,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;OAC1B;KACF;GACF;EAED,MAAM;IACJ,QACEC,qBACE,KAAK,EAAC,cAAc,8BACM,IAAI,CAAC,QAAQ,IAAI,UAAU,IAErDA,yBAAU,IAAI,CAAC,OAAO,CAAW,EAChC,IAAI,CAAC,QAAQ,KACZA,kBAAM,IAAI,EAAC,SAAS,EAAC,SAAS,EAAEC,wBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAI,CACtE,EACA,CAAC,IAAI,CAAC,QAAQ,KACbD,kBAAM,IAAI,EAAC,SAAS,IACjB,CAAC,IAAI,CAAC,eAAe;MACpB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,EAAEE,OAAK,MAC9BF,gBAAI,GAAG,EAAE,gBAAgBE,OAAK,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,SAAS,GAAI,CACjE,CAAC,EACH,IAAI,CAAC,eAAe,IAAIF,qBAAQ,CAC5B,CACR,CACO,EACV;GACH;;;;;;;","names":["parseData","h","getDefaultLinkData","index"],"sources":["src/components/db-dropdown/db-dropdown.scss?tag=db-dropdown","src/components/db-dropdown/db-dropdown.tsx"],"sourcesContent":["@import '../general';\n@import 'dropdown';\n","import { Component, h, Prop, Element } from '@stencil/core';\nimport { DbLinkType } from '../db-link/db-link-type';\nimport { getDefaultLinkData, parseData } from '../../utils/utils';\n\n@Component({\n  tag: 'db-dropdown',\n  styleUrl: 'db-dropdown.scss'\n})\nexport class DbDropdown {\n  /**\n   * The data attribute can be used to generate dropdown by data.\n   */\n  @Prop({ reflect: true }) data?: string;\n\n  /**\n   * The opposite attribute, changes the behaviour: dropdown -> left.\n   */\n  @Prop({ reflect: true }) opposite: boolean;\n\n  /**\n   * The summary attribute, shows a text for accessibility.\n   */\n  @Prop({ reflect: true }) summary = '';\n\n  private compData: DbLinkType[];\n\n  private hasItemsWrapper: boolean;\n\n  get children(): Element[] {\n    return this._children;\n  }\n\n  set children(value: Element[]) {\n    this._children = value;\n  }\n  private _children: Element[];\n\n  @Element() host: HTMLDbDropdownElement;\n\n  componentWillLoad() {\n    if (this.data) {\n      this.compData = parseData(this.data);\n    } else {\n      this._children = Array.from(this.host.children);\n      if (this.children.find((child) => child.tagName.toLowerCase() === 'li')) {\n        this.hasItemsWrapper = true;\n      } else {\n        this.host.innerHTML = '';\n      }\n    }\n  }\n\n  render() {\n    return (\n      <details\n        class=\"cmp-dropdown\"\n        data-horizontal-position={this.opposite && 'opposite'}\n      >\n        <summary>{this.summary}</summary>\n        {this.compData && (\n          <menu type=\"toolbar\" innerHTML={getDefaultLinkData(this.compData)} />\n        )}\n        {!this.compData && (\n          <menu type=\"toolbar\">\n            {!this.hasItemsWrapper &&\n              this._children.map((child, index) => (\n                <li key={`cmp-dropdown-${index}`} innerHTML={child.outerHTML} />\n              ))}\n            {this.hasItemsWrapper && <slot />}\n          </menu>\n        )}\n      </details>\n    );\n  }\n}\n"],"version":3}