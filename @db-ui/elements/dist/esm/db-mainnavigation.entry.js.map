{"file":"db-mainnavigation.entry.js","mappings":"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","names":[],"sources":["src/components/db-mainnavigation/db-mainnavigation.scss?tag=db-mainnavigation","src/components/db-mainnavigation/db-mainnavigation.tsx"],"sourcesContent":["@import '../general';\n@import 'mainnavigation';\n\na {\n  @extend .elm-link;\n}\n","import { Component, Element, h, Prop } from '@stencil/core';\nimport {\n  DbMainnavigationDataType,\n  DbMainnavigationItemType\n} from './db-mainnavigation-type';\nimport { parseData } from '../../utils/utils';\n\nconst getJsxLinks = (items: DbMainnavigationItemType[]) => {\n  return items.map((item, index) => (\n    <li key={`mainnavigation-item-${index}`} innerHTML={item.html}>\n      {item.children && <ul>{getJsxLinks(item.children)}</ul>}\n    </li>\n  ));\n};\n\nconst setupItemsRecursive = (\n  children: Element[]\n): DbMainnavigationItemType[] => {\n  const items: DbMainnavigationItemType[] = [];\n  children.forEach((child) => {\n    const singleAnchor = child.children.length === 1;\n\n    items.push({\n      html: child.outerHTML,\n      children:\n        !singleAnchor && child.children\n          ? setupItemsRecursive(Array.from(child.children))\n          : []\n    });\n  });\n  return items;\n};\nconst cleanUpItem = (item: DbMainnavigationItemType) => {\n  item.children.forEach((child) => {\n    item.html = item.html.replace(child.html, '');\n    cleanUpItem(child);\n  });\n};\n\nconst setupOnlyDbLinkNavigation = (\n  children: Element[]\n): DbMainnavigationItemType[] => {\n  const nonDbLinkChildren = children.filter(\n    (child) =>\n      child.tagName.toLowerCase() !== 'db-link' &&\n      child.tagName.toLowerCase() !== 'a'\n  );\n  if (nonDbLinkChildren.length === 0) {\n    const items = setupItemsRecursive(children);\n    items.forEach((item) => {\n      cleanUpItem(item);\n    });\n    return items;\n  }\n  return [];\n};\n\nconst getCompDataHtml = (compData: DbMainnavigationDataType[]) => {\n  let html = '';\n\n  compData.forEach((data) => {\n    let listTag = '<li>\\n';\n    let hasChildren = false;\n    if (data.children && data.children.length > 0) {\n      listTag = '<li aria-haspopup=\"true\">\\n';\n      hasChildren = true;\n    }\n\n    listTag += `<db-link href=\"${data.link}\" current=\"${\n      data.current ? 'page' : false\n    }\">${data.label}</db-link>\\n`;\n    html += listTag;\n    if (hasChildren) {\n      html += `<ul>\\n${getCompDataHtml(data.children)}</ul>\\n`;\n    }\n    html += '</li>';\n  });\n  return html;\n};\n\nconst addAreaPopupsRecursive = (children: Element[]) => {\n  if (children && children.length > 0) {\n    children.forEach((child) => {\n      if (child.tagName.toLowerCase() === 'li' && child.children) {\n        const subChildren = Array.from(child.children);\n        if (\n          subChildren.find((sChild) => sChild.tagName.toLowerCase() === 'ul')\n        ) {\n          child.setAttribute('aria-haspopup', 'true');\n        }\n        addAreaPopupsRecursive(subChildren);\n      }\n    });\n  }\n};\n\n@Component({\n  tag: 'db-mainnavigation',\n  styleUrl: 'db-mainnavigation.scss'\n})\nexport class DbMainnavigation {\n  /**\n   * The site-name attribute can be set to have the site name for small screens.\n   */\n  @Prop({ reflect: true, attribute: 'site-name' }) siteName?: string;\n\n  /**\n   * The data attribute can be used to generate main navigation by data.\n   */\n  @Prop({ reflect: true }) data?: string;\n\n  private hasItemsWrapper: boolean;\n\n  private compData: DbMainnavigationDataType[];\n\n  private children: Element[];\n  private onlyLinks: DbMainnavigationItemType[];\n\n  @Element() host: HTMLDbMainnavigationElement;\n\n  componentWillLoad() {\n    if (this.data) {\n      this.compData = parseData(this.data);\n    } else {\n      this.children = Array.from(this.host.children);\n      this.onlyLinks = setupOnlyDbLinkNavigation(this.children);\n      if (this.children.find((child) => child.tagName.toLowerCase() === 'li')) {\n        this.hasItemsWrapper = true;\n        addAreaPopupsRecursive(this.children);\n      } else {\n        this.host.innerHTML = '';\n      }\n    }\n  }\n\n  render() {\n    return (\n      <nav class=\"cmp-mainnavigation\" id=\"mainnavigation\">\n        <input type=\"checkbox\" id=\"toggle_mainnavigation\" />\n        <label\n          htmlFor=\"toggle_mainnavigation\"\n          title=\"Toggle main navigation\"\n          class=\"is-site-name\"\n        >\n          {this.siteName}\n        </label>\n        {this.compData && <ul innerHTML={getCompDataHtml(this.compData)} />}\n        {!this.compData && (\n          <ul>\n            {this.onlyLinks && getJsxLinks(this.onlyLinks)}\n            {!this.hasItemsWrapper &&\n              !this.onlyLinks &&\n              this.children.map((child, index) => (\n                <li\n                  key={`cmp-mainnavigation-item-${index}`}\n                  innerHTML={child.outerHTML}\n                />\n              ))}\n            {this.hasItemsWrapper && <slot />}\n          </ul>\n        )}\n      </nav>\n    );\n  }\n}\n"],"version":3}