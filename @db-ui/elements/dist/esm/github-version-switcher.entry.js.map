{"file":"github-version-switcher.entry.js","mappings":"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","names":[],"sources":["src/components/development/github-version-switcher/github-version-switcher.scss?tag=github-version-switcher&encapsulation=shadow","src/components/development/github-version-switcher/github-version-switcher.tsx"],"sourcesContent":[".gh-version-switcher select {\n  max-width: 196px;\n}\n","import { Component, h, Host, Prop, State } from '@stencil/core';\n\n@Component({\n  tag: 'github-version-switcher',\n  styleUrl: 'github-version-switcher.scss',\n  shadow: true\n})\nexport class GithubVersionSwitcher {\n  private _defaultBranch = 'latest';\n  get defaultBranch(): string {\n    return this._defaultBranch;\n  }\n\n  set defaultBranch(value: string) {\n    this._defaultBranch = value;\n  }\n  /**\n   * Provides the owner of the repo\n   */\n  @Prop({ reflect: false }) owner: string;\n\n  /**\n   * Provides the name of the repo\n   */\n  @Prop({ reflect: false }) repo: string;\n  @State() groups = [\n    { prefix: 'v', name: 'Versions', branches: [] },\n    { prefix: 'test', name: 'Tests', branches: [] },\n    { prefix: 'feat', name: 'Features', branches: [] },\n    { prefix: 'fix', name: 'Bugfixes', branches: [] },\n    { prefix: 'chore', name: 'Chore', branches: [] },\n    { prefix: 'docs', name: 'Docs', branches: [] },\n    { prefix: 'refactor', name: 'Refactors', branches: [] },\n    { prefix: 'style', name: 'Styles', branches: [] },\n    { prefix: 'ci', name: 'CI', branches: [] },\n    { prefix: 'perf', name: 'Perf', branches: [] },\n    { prefix: '', name: 'Other', branches: [] }\n  ];\n  @State() currentBranch = this._defaultBranch;\n  @State() cleanOwner;\n  @State() cleanRepo;\n\n  private stripString = (value: string): string => {\n    return value.replace(/[^a-zA-Z0-9-]/g, '');\n  };\n\n  private fetchFromGitHubApi = async (url: string) => {\n    const response = await fetch(url);\n    return await response.json();\n  };\n\n  private setCurrentBranch = (branchNames: string[]) => {\n    const currentUrl = window.location.href;\n    const foundBranch = branchNames.find((branch) =>\n      currentUrl.includes(branch)\n    );\n    if (foundBranch) {\n      this.currentBranch = foundBranch;\n    }\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private setBranches = (data: any[]) => {\n    const branchNames = data\n      .map((branch) => branch.name)\n      .filter(\n        (branch) => branch !== 'gh-pages' && !branch.includes('dependabot')\n      );\n    branchNames.forEach((branch) => {\n      const foundGroup = this.groups.find((grp) =>\n        branch.startsWith(grp.prefix)\n      );\n      if (foundGroup) {\n        foundGroup.branches.push(branch);\n      } else {\n        this.groups.at(-1).branches.push(branch);\n      }\n    });\n    this.setCurrentBranch(branchNames);\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private setTags = (data: any[]) => {\n    const tagNames = data.map((tag) => tag.name);\n    tagNames.forEach((tag: string) => {\n      this.groups[0].branches.push(tag);\n    });\n    this.setCurrentBranch(tagNames);\n  };\n\n  async componentWillLoad() {\n    const cOwner = this.stripString(this.owner);\n    this.cleanOwner = cOwner;\n    const cRepo = this.stripString(this.repo);\n    this.cleanRepo = cRepo;\n    const branchesData = await this.fetchFromGitHubApi(\n      `https://api.github.com/repos/${cOwner}/${cRepo}/branches`\n    );\n    this.setBranches(branchesData);\n    const tagsData = await this.fetchFromGitHubApi(\n      `https://api.github.com/repos/${cOwner}/${cRepo}/tags`\n    );\n    this.setTags(tagsData);\n  }\n\n  // eslint-disable-next-line @stencil-community/own-methods-must-be-private\n  handleChange(branch: string, localOwner: string, localRepo: string) {\n    if (localOwner && localRepo) {\n      const currentUrl = top.location.href;\n      const urlPaths = currentUrl.split('?');\n      const lastPath = urlPaths[urlPaths.length - 1];\n      const isTag = branch.split('.').length === 3 && branch.startsWith('v');\n      top.location = `https://${localOwner}.github.io/${localRepo}${\n        this._defaultBranch === branch\n          ? ''\n          : `${isTag ? '/version' : '/review'}/${branch}`\n      }/?${lastPath}`;\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.groups?.length > 0 && (\n          <db-select\n            class=\"gh-version-switcher\"\n            label=\"Version\"\n            name=\"Theme\"\n            onDbChange={(event) =>\n              this.handleChange(\n                event.target.value,\n                this.cleanOwner,\n                this.cleanRepo\n              )\n            }\n          >\n            <option\n              value={this._defaultBranch}\n              selected={this.currentBranch === this._defaultBranch}\n            >\n              {this._defaultBranch}\n            </option>\n            {this.groups\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              .filter((group: any) => group.branches?.length > 0)\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              .map((group: any) => (\n                <optgroup key={group.name} label={group.name}>\n                  {group.branches.map((branch: string, index: number) => (\n                    <option\n                      key={`${group.name}-${branch}-${index}`}\n                      value={branch}\n                      selected={this.currentBranch === branch}\n                    >\n                      {branch}\n                    </option>\n                  ))}\n                </optgroup>\n              ))}\n          </db-select>\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}